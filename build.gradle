//group 'cvo001'
//version '1.0-SNAPSHOT'
//
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "com.moowork.gradle:gradle-node-plugin:1.1.1"
    }
}
plugins {
    id "com.moowork.node" version "1.1.1"
    id "com.moowork.grunt" version "1.1.1"
}
ext.cvo001Path = rootDir.path
apply from: "$cvo001Path/buildScript/init.cvo.grad"

// com.moowork.node is thw website that provide gradle-node-plugin ;
apply plugin: 'com.moowork.node'
// end of adding com.moowork.node;
//original plugins
apply plugin: 'ear'
apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'war'
// end of original plugins
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    // The following dependencies will be the ear modules and
    // will be placed in the ear root
    // deploy project(':war')

    // The following dependencies will become ear libs and will
    // be placed in a dir configured via the libDirName property
    // earlib group: 'log4j', name: 'log4j'
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

ear {
    appDirName 'src/main/app'  // use application metadata found in this folder
    // put dependent libraries into APP-INF/lib inside the generated EAR
    libDirName 'APP-INF/lib'
    deploymentDescriptor {  // custom entries for application.xml:
//      fileName = "application.xml"  // same as the default value
//      version = "6"  // same as the default value
//      applicationName = "customear"
        initializeInOrder = true
//      displayName = "Custom Ear"  // defaults to project.name
        // defaults to project.description if not set
//      description = "My customized EAR for the Gradle documentation"
//      libraryDirectory = "APP-INF/lib"  // not needed, above libDirName setting does this
//      module("my.jar", "java")  // won't deploy as my.jar isn't deploy dependency
//      webModule("my.war", "/")  // won't deploy as my.war isn't deploy dependency
//      securityRole "admin"
//      securityRole "superadmin"
    }
}


task addExpress(type: YarnTask) {
    //install the express package only
    args = ['add'
            ,'aphrodite'
            ,'babel-cli', 'babel-core', 'babel-loader'
            ,'babel-plugin-syntax-decorators', 'babel-plugin-transform-class-properties'
            ,'babel-plugin-transform-decorators-legacy', 'babel-plugin-transform-es2015-classes'
            , 'babel-preset-es2015', 'babel-preset-es2017', 'babel-preset-react'
            ,'babel-preset-stage-0', 'babel-preset-stage-1', 'babel-preset-stage-2'
            ,'css-loader'
            ,'file-loader', 'formsy-material-ui', 'grommet'
            ,'history', 'jsx', 'jsx-loader', 'less', 'less-loader', 'material-ui'
            , 'path', 'paper', 'postcss', 'postcss-cssnext', 'prop-types'
            ,'radium', 'react', 'react-css-modules', 'react-dom', 'react-redux'
            ,'react-router', 'react-router-config', 'react-router-dom', 'react-router-redux'
            ,'react-tap-event-plugin'
            , 'redux', 'redux-form'
            ,'style-loader', 'webpack'
            ,'--dev']
}
task removeExpress(type: YarnTask) {
    //install the express package only
    args = ['remove'
            ,'aphrodite'
            ,'babel-cli', 'babel-core', 'babel-loader'
            ,'babel-plugin-syntax-decorators', 'babel-plugin-transform-class-properties'
            ,'babel-plugin-transform-decorators-legacy', 'babel-plugin-transform-es2015-classes'
            , 'babel-preset-es2015','babel-preset-es2017', 'babel-preset-react'
            ,'babel-preset-stage-0','babel-preset-stage-1', 'babel-preset-stage-2'
            ,'css-loader'
            ,'file-loader', 'formsy-material-ui', 'grommet'
            ,'history', 'jsx', 'jsx-loader', 'less', 'less-loader', 'material-ui'
            , 'path', 'paper', 'postcss', 'postcss-cssnext', 'prop-types'
            ,'radium', 'react', 'react-css-modules', 'react-dom', 'react-redux'
            ,'react-router', 'react-router-config', 'react-router-dom', 'react-router-redux'
            ,'react-tap-event-plugin'
            , 'redux', 'redux-form'
            ,'style-loader', 'webpack'
            ,'-D']
}
task bundle(type: YarnTask) {
//    inputs.files(fileTree('node_modules'))
//    inputs.files(fileTree('src/main/webapp/js'))
    inputs.file('package.json')
    inputs.file('webpack.config.js')

//    outputs.dir('build/resources/static')
    outputs.dir('src/main/webapp/jswebpack')
    dependsOn yarn_install
    args = ['run', 'build']
}

// bundle.mustRunAfter addExpress
war.mustRunAfter bundle
